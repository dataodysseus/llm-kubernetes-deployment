name: Deploy CPU GKE Cluster (Manual)

on:
  workflow_dispatch:
    inputs:
      cluster_name:
        description: 'Cluster name'
        required: true
        default: 'llm-deploy-cpu'
        type: string
      machine_type:
        description: 'Machine type'
        required: true
        default: 'n2d-standard-4'
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'  # Required for Workload Identity Federation

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          project_id: "${{ secrets.GCP_PROJECT_ID }}"
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: "${{ secrets.GCP_PROJECT_ID }}"

      - name: Enable Required Services
        run: |
          gcloud services enable container.googleapis.com

      - name: Create GKE Cluster (if not exists)
        run: |
          #!/bin/bash
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        
          # Check if the cluster already exists
          if gcloud container clusters describe ${{ inputs.cluster_name }} --region=${{ secrets.GCP_REGION }} --project=${{ secrets.GCP_PROJECT_ID }} &>/dev/null; then
            echo "Cluster llm-deploy already exists. Skipping creation."
          else
            echo "Cluster does not exist. Creating..."
            gcloud container clusters create ${{ inputs.cluster_name }} --location ${{ secrets.GCP_REGION }} \
              --workload-pool ${{ secrets.GCP_PROJECT_ID }}.svc.id.goog \
              --enable-image-streaming --node-locations=${{ secrets.GCP_REGION }}-a \
              --machine-type ${{ inputs.machine_type }} --num-nodes 1 \
              --release-channel=rapid
          fi
        
          # Get cluster credentials
          gcloud container clusters get-credentials ${{ inputs.cluster_name }} --region=${{ secrets.GCP_REGION }} --project=${{ secrets.GCP_PROJECT_ID }}

        


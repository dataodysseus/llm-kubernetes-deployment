name: Create GCP Artifact Registry (Manual)

on:
  workflow_dispatch:
    inputs:
      registry_name:
        description: 'Artifact registry name'
        required: true
        default: 'gen-ai-app-registry-test'
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          project_id: "${{ secrets.GCP_PROJECT_ID }}"
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: "${{ secrets.GCP_PROJECT_ID }}"

      - name: Enable Required Services
        run: |
          gcloud services enable container.googleapis.com
          gcloud services enable artifactregistry.googleapis.com

      - name: Assign Artifact Registry Admin role
        run: |
          gcloud projects add-iam-policy-binding ${{ secrets.GCP_PROJECT_ID }} \
          --member="serviceAccount:${{ secrets.GCP_SERVICE_ACCOUNT }}" \
          --role="roles/artifactregistry.admin"

      - name: Wait for IAM propagation
        run: sleep 120

      - name: Verify Permissions
        run: |
          gcloud projects get-iam-policy ${{ secrets.GCP_PROJECT_ID }} \
            --flatten="bindings[].members" \
            --format="table(bindings.role)" \
            --filter="bindings.members:${{ secrets.GCP_SERVICE_ACCOUNT }}"

      - name: Check if Artifact Registry exists and create if not
        run: |  
          # Store the input in a variable
          REGISTRY_NAME="${{ github.event.inputs.registry_name }}"
          GCP_REGION="${{ secrets.GCP_REGION }}"
          GCP_PROJECT_ID="${{ secrets.GCP_PROJECT_ID }}"

          # Check if the repository exists
          if ! gcloud artifacts repositories describe "$REGISTRY_NAME" \
              --location="$GCP_REGION" \
              --project="$GCP_PROJECT_ID" >/dev/null 2>&1; then
            echo "Artifact Registry repository '$REGISTRY_NAME' does not exist in $GCP_REGION. Creating..."
            gcloud artifacts repositories create "$REGISTRY_NAME" \
              --repository-format=docker \
              --location="$GCP_REGION" \
              --project="$GCP_PROJECT_ID" \
              --description="Docker image repository created by GitHub Actions"
            echo "Successfully created Docker Artifact Registry repository: $REGISTRY_NAME in $GCP_REGION for project $GCP_PROJECT_ID"
          else
            echo "Artifact Registry repository '$REGISTRY_NAME' already exists in $GCP_REGION. Skipping creation."
          fi
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm
  namespace: gke-ai-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: llm
  template:
    metadata:
      labels:
        app: llm
      annotations:
        gke-gcsfuse/volumes: "true"
    spec:
      serviceAccountName: gpu-k8s-sa
      # InitContainer to verify GCS mount
      initContainers:
      - name: verify-mount
        image: busybox
        command: ['sh', '-c', 'echo "Waiting for GCS mount..."; while [ ! -f /app/model_weights/config.json ]; do sleep 1; done; echo "Found config.json"']
        volumeMounts:
        - name: gcsfuse-volume
          mountPath: /app/model_weights
      # Main LLM container
      containers:
      - name: llm
        image: {{REGION}}-docker.pkg.dev/{{PROJECT_ID}}/{{ARTIFACT_REGISTRY}}/{{model_image}}-cpu-inference:latest
        resources:
          requests:
            cpu: "2"
            memory: "8Gi"
          limits:
            cpu: "4"
            memory: "16Gi"
        env:
        - name: MODEL_DIR
          value: "/app/model_weights"
        - name: PORT
          value: "8080"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: gcsfuse-volume
          mountPath: /app/model_weights
          readOnly: true
      # GCSFuse sidecar container (required for CSI driver)
      - name: gcsfuse-sidecar
        image: gcr.io/gke-release/gcsfuse/csi-sidecar:v0.2.4-gke.0
        imagePullPolicy: Always
        securityContext:
          privileged: true
        command: ["/bin/sleep"]
        args: ["infinity"]
        volumeMounts:
        - name: gcsfuse-tmp
          mountPath: /gcsfuse-tmp
      volumes:
      - name: gcsfuse-volume
        csi:
          driver: gcsfuse.csi.storage.gke.io
          volumeAttributes:
            bucketName: llm-test-bucket-2025
            mountOptions: "implicit-dirs,uid=1000,gid=1000"
      - name: gcsfuse-tmp
        emptyDir: {}